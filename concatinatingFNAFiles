import os
import fileinput
from collections import OrderedDict
import shutil
'This program concatenates files in a large amount of directories into directory.extension '
'This script was designed to concatenate DNA files from all.fna downloaded from NCBI database on a unix machine into'
'/user/directory/dictionary.extension'

'example:'
'user/directory1/file1.txt'
'user/directory1/file2.txt'
'this program will turn directory1 into'
'user/directory1/directory1.txt'
'where directory1 is cat file1.txt file2.txt > dictionary1.txt'
'user/directory2/file.txt will be unchanged, where dictionary2 has only file.txt'

directory = '/Users/jon6/Desktop/testfna'
ext = ".txt"

currentDirectory = None
previousDirectory = None
listOfDirectoriesWithMultipleFNAfiles = []
listOfDirectoriesWithMultipleFNAfilesNoRepeats = []
x = 0
for subdir, dirs, files in os.walk(directory, topdown=True):
    for file in files:
        currentDirectory = subdir
        if currentDirectory == previousDirectory:
            listOfDirectoriesWithMultipleFNAfiles.insert(x, currentDirectory)
            x +=1
        previousDirectory = subdir
listOfDirectoriesWithMultipleFNAfilesNoRepeats = list(OrderedDict.fromkeys(listOfDirectoriesWithMultipleFNAfiles))
print (listOfDirectoriesWithMultipleFNAfilesNoRepeats)

listOfFNAfiles = []
catCommand = None
newFNAfileName = None
for dirFile in listOfDirectoriesWithMultipleFNAfilesNoRepeats:
    print(dirFile)
    base = os.path.basename(dirFile)
    fnaConstruct = (os.path.join(dirFile, base))
    newFNAfileName = fnaConstruct+ext
    for root, dir, files in os.walk(dirFile, topdown=True):
        for f in files:
            if f is newFNAfileName:
                print ("run already done before, error")
                break
            if f.endswith(ext):
                catFileTo = ((os.path.join(root, f)))
                listOfFNAfiles.append(catFileTo+' ')
                print (catFileTo)

    string1 = ''.join(listOfFNAfiles)
    catCommand = "cat " + string1 + " > " + newFNAfileName
    rmCommand = "rm " + string1
    print (catCommand)
    os.system(catCommand)
    print(rmCommand)
    os.system(rmCommand)
    listOfFNAfiles = []
    catCommand = None
    newFNAfileName = None
    string1 = None

listOfDirectoriesWithMultipleFNAfilesNoRepeats = None


'''
old, buggy version


import os
import fileinput
from collections import OrderedDict
directory = '/Users/jon6/Desktop/test.fna'

currentDirectory = None
previousDirectory = None
listOfDirectoriesWithMultipleFNAfiles = []
listOfDirectoriesWithMultipleFNAfilesNoRepeats = []
x = 0
for subdir, dirs, files in os.walk(directory, topdown=True):
    for file in files:
        currentDirectory = subdir
        '''print ("current:{0}".format(currentDirectory))'''
        if currentDirectory == previousDirectory:
            '''print ("same as previous")'''
            listOfDirectoriesWithMultipleFNAfiles.insert(x, currentDirectory)
            x +=1
        previousDirectory = subdir
        '''print (file)'''
listOfDirectoriesWithMultipleFNAfilesNoRepeats = list(OrderedDict.fromkeys(listOfDirectoriesWithMultipleFNAfiles))
'''print (listOfDirectoriesWithMultipleFNAfilesNoRepeats)'''

newFNAfileName = None
listOfFNAfiles = []
z = 0
for dirFiles in listOfDirectoriesWithMultipleFNAfilesNoRepeats:
    for root, dir, files in os.walk(dirFiles, topdown=True):
        newFNAfileName = (root) + '.txt'
        '''print (newFNAfileName)'''
        for file in files:
            listOfFNAfiles.insert(z, format(os.path.join(root, file)))
            z += 1
            '''print("file:" + format(z))'''

    '''print (listOfFNAfiles)
    print (newFNAfileName)
    print ("directory name:{0}".format(os.path.join(root, file)))
    '''
    '''
    with open(newFNAfileName, "wb") as outfile:
        for FNAfile in listOfFNAfiles:
            with open(FNAfile, "rb") as infile:
                outfile.write(infile.read())
    '''

    '''
    with open(newFNAfileName, 'w') as newFNAfile:
        input_lines = fileinput.input(listOfFNAfiles)
        newFNAfile.writelines(input_lines)
    '''

with open(newFNAfileName, 'w') as result:
    for FNAfile in listOfFNAfiles:
        print (FNAfile)
        for line in open(FNAfile, 'r'):
            result.write(line)
'''
