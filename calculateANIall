'''
CURRENTLY DOES NOT WORK CORRECTLY
does [0] vs [0] repeatidly, instead of 
blast:[0] vs [0]
mummers: [0] vs [0]
blast [1] vs [1]
mummers [1] vs [1]
etc
'''
from __future__ import division
import os
from collections import OrderedDict

'''
MUMMER ANI CALCULATION FUNCTIONS
'''

def process_mummer_data(path):
    with open(path) as input_file:
        for line in input_file:
            chunk = line.strip().split(' ')
            if len(chunk) == 7:
                yield chunk

def calculateMummerANI(path):
    x=0
    listOfMummerANI = []
    oneHundredANI = False
    for piece in process_mummer_data(path):
        if piece[0] == piece[2]:
            if piece[4] and piece[5] == '0':
                oneHundredANI = True
                length = abs(((int(piece[1])-int(piece[0]))) + abs((int(piece[3])-int(piece[2])))) / 2
                ANI = ((length - int(piece[5])) / length) * 100
                listOfMummerANI.insert(x, ANI)
                x += 1
                break

    if not oneHundredANI:
        for piece in process_mummer_data(path):
            length = abs(((int(piece[1])-int(piece[0]))) + abs((int(piece[3])-int(piece[2])))) / 2
            ANI = ((length - int(piece[5])) / length) * 100
            listOfMummerANI.insert(x, ANI)
            x += 1

    if not listOfMummerANI:
        return "%ANI is low"
    else:
        return ((sum(listOfMummerANI)/ x))

mummerBaseDirectory = '/Users/jon6/MUMmer3.23/'
deltaFilesNamesDirectory = '/Users/jon6/MUMmer3.23/allDeltaFiles/'
ext = ".delta"

listOfMummerFiles = []
for root, subdir, files in os.walk(deltaFilesNamesDirectory, topdown=True):
    for file in files:
        currentDirectory = subdir
        if file.endswith(ext):
            currentFile = ((os.path.join(root, file)))
            listOfMummerFiles.append(currentFile)
listOfMummerDeltaFilesNoRepeats = list(OrderedDict.fromkeys(listOfMummerFiles))
numberOfMummerDeltaFiles =  len(listOfMummerDeltaFilesNoRepeats)

'''
BLAST ANI CALCULATION FUNCTIONS
'''
blastBaseDirectory = '/Users/jon6/ncbi-blast-2.2.29+/'
outFilesNamesDirectory = '/Users/jon6/ncbi-blast-2.2.29+/'
ext = ".out"

def process_blast_data(path):
    with open(path) as input_file:
        for line in input_file:
            chunk = line.strip().split()
            yield chunk

def calculateBlastANI(path):
    x = 0
    total = 0
    oneHundredPercentANI = False
    for piece in process_blast_data(path):
        if piece[2] == '100.00' and piece[6] == '1':
            oneHundredPercentANI = True
            percent_identity = float(piece[2])
            total += percent_identity
            x += 1
            break

    if not oneHundredPercentANI:
        for piece in process_blast_data(path):
            percent_identity = float(piece[2])
            total += percent_identity
            x += 1

    if not x:
        return "%ANI is very low or end of files"
    else:
        blastANI = total / x
        return blastANI

listOfOutFiles = []
for root, subdir, files in os.walk(blastBaseDirectory, topdown=True):
    for file in files:
        currentDirectory = subdir
        if file.endswith(ext):
            currentFile = ((os.path.join(root, file)))
            listOfOutFiles.append(currentFile)
listOfBlastOutFilesNoRepeats = list(OrderedDict.fromkeys(listOfOutFiles))
numberOfBlastOutFiles =  len(listOfBlastOutFilesNoRepeats)

'''
BLAST AND MUMMERS ANI CALCULATION DRIVERS
'''

l = None
if numberOfMummerDeltaFiles > numberOfBlastOutFiles:
    l = numberOfMummerDeltaFiles
else:
    l = numberOfBlastOutFiles

'''
MUMMERS
'''

runBlast= True
runMummer = True
a = 0
b = 0

for h in range(0,l):
    compareString = "%ANI is low"
    for i in range(a,numberOfMummerDeltaFiles):
        if runMummer == True:
            sMummer = calculateMummerANI(listOfMummerDeltaFilesNoRepeats[i])
            if sMummer:
                if sMummer != compareString:
                    print ("mummers ANI: " + str(os.path.basename(listOfMummerDeltaFilesNoRepeats[i])) + ": " +str(sMummer) + "%")
                    a = a
                    print (a)
                    runBlast = True
                    runMummer = False
    '''
    BLAST
    '''
    for j in range(b,numberOfMummerDeltaFiles):
        if  runBlast == True:
            sBlast = calculateBlastANI(listOfBlastOutFilesNoRepeats[j])
            if sBlast:
                print ("blast ANI: " + str(os.path.basename(listOfBlastOutFilesNoRepeats[j])) + ": " +str(sBlast) + "%")
                b = b
                print (b)
                runMummer = True
                runBlast = False
